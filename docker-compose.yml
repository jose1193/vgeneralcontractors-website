services:
    laravel.test:
        build:
            context: "./vendor/laravel/sail/runtimes/8.4"
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: "sail-8.4/app"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "8080:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql
            - redis

    # Nuevo servicio para la cola con Supervisor
    queue-supervisor:
        build:
            context: .
            dockerfile: Dockerfile.queue
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql
            - redis

    # Nuevo servicio para los cronjobs
    cron:
        build:
            context: .
            dockerfile: Dockerfile.cron
            args:
                WWWGROUP: "${WWWGROUP}"
        environment:
            WWWUSER: "${WWWUSER}"
            WWWGROUP: "${WWWGROUP}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql
            - redis

    # Servicio simple de queue (como alternativa a Supervisor)
    queue:
        build:
            context: "./vendor/laravel/sail/runtimes/8.4"
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: "sail-8.4/app"
        command: ["php", "artisan", "queue:work", "--tries=3", "--max-time=0"]
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql
            - redis

    pgsql:
        image: "postgres:15"
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        volumes:
            - "sail-pgsql:/var/lib/postgresql/data"
            - "./vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_ready
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s
    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
