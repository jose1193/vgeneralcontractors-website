<?php

namespace App\Repositories\Interfaces;

use App\Models\{{EntityName}};
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Collection;

interface {{EntityName}}RepositoryInterface extends BaseRepositoryInterface
{
    /**
     * Get all {{entityName}} records with pagination and filters
     */
    public function getAllPaginated(
        int $perPage = 15,
        ?string $search = null,
        array $filters = []
    ): LengthAwarePaginator;

    /**
     * Find {{entityName}} by UUID
     */
    public function findByUuid(string $uuid): ?{{EntityName}};

    /**
     * Get {{entityName}} records by user
     */
    public function getByUser(int $userId): Collection;

    /**
     * Search {{entityName}} records
     */
    public function search(string $query): Collection;

    /**
     * Get active {{entityName}} records
     */
    public function getActive(): Collection;

    /**
     * Get inactive {{entityName}} records
     */
    public function getInactive(): Collection;

    /**
     * Restore soft deleted {{entityName}}
     */
    public function restore(string $uuid): ?{{EntityName}};

    /**
     * Force delete {{entityName}}
     */
    public function forceDelete(string $uuid): bool;

    /**
     * Get {{entityName}} records for export
     */
    public function getForExport(array $filters = []): Collection;
}